from enum import Enum

elements = {}
modifiers = {}


class Modifier(Enum):
    DIR = 1
    UNDER = 2
    SIDES_TOP = 3
    BITS8 = 4
    BITS16 = 5
    BITS32 = 6
    DIR_ARROWS = 7


def elem(byte, name, mods=None):
    elements[byte] = name
    if type(mods) not in (list, tuple):
        mods = (mods,)
    modifiers[byte] = mods


elem(0x1, 'Floor')
elem(0x2, 'Wall')
elem(0x3, 'Ice')
elem(0x4, 'Ice, South West Corner')
elem(0x5, 'Ice, North West Corner')
elem(0x6, 'Ice, North East Corner')
elem(0x7, 'Ice, South East Corner')
elem(0x8, 'Water')
elem(0x9, 'Fire')
elem(0xa, 'Force Floor, North')
elem(0xb, 'Force Floor, East')
elem(0xc, 'Force Floor, South')
elem(0xd, 'Force Floor, West')
elem(0xe, 'Green Toggle Wall')
elem(0xf, 'Green Toggle Floor')
elem(0x10, 'Red Teleport')
elem(0x11, 'Blue Teleport')
elem(0x12, 'Yellow Teleport')
elem(0x13, 'Green Teleport')
elem(0x14, 'Exit')
elem(0x15, 'Slime (the obstacle)')
elem(0x16, 'Chip (the hero)', (Modifier.DIR, Modifier.UNDER))
elem(0x17, 'Dirt Block', (Modifier.DIR, Modifier.UNDER))
elem(0x18, 'Walker Enemy', (Modifier.DIR, Modifier.UNDER))
elem(0x19, 'Ship Enemy', (Modifier.DIR, Modifier.UNDER))
elem(0x1a, 'Ice Block', (Modifier.DIR, Modifier.UNDER))
elem(0x1b, '(Unused) East Panel', Modifier.UNDER)
elem(0x1c, '(Unused) South Panel', Modifier.UNDER)
elem(0x1d, '(Unused) South+East Panel', Modifier.UNDER)
elem(0x1e, 'Gravel')
elem(0x1f, 'Door Toggle Button')
elem(0x20, 'Blue Tank Button')
elem(0x21, 'Blue Tank')
elem(0x22, 'Red Door')
elem(0x23, 'Blue Door')
elem(0x24, 'Yellow Door')
elem(0x25, 'Green Door')
elem(0x26, 'Red Key', Modifier.UNDER)
elem(0x27, 'Blue Key', Modifier.UNDER)
elem(0x28, 'Yellow Key', Modifier.UNDER)
elem(0x29, 'Green Key', Modifier.UNDER)
elem(0x2a, 'IC Chip', Modifier.UNDER)
elem(0x2b, 'Extra IC Chip', Modifier.UNDER)
elem(0x2c, 'IC Chip Socket')
elem(0x2d, 'Push-up Wall')
elem(0x2e, 'Appearing Wall')
elem(0x2f, 'Invisible Wall')
elem(0x30, 'Solid Blue Wall')
elem(0x31, 'False Blue Wall')
elem(0x32, 'Dirt')
elem(0x33, 'Ant', (Modifier.DIR, Modifier.UNDER))
elem(0x34, 'Centipede', (Modifier.DIR, Modifier.UNDER))
elem(0x35, 'Purple Ball', (Modifier.DIR, Modifier.UNDER))
elem(0x36, 'Blob', (Modifier.DIR, Modifier.UNDER))
elem(0x37, 'Red Teeth', (Modifier.DIR, Modifier.UNDER))
elem(0x38, 'Fire box', (Modifier.DIR, Modifier.UNDER))
elem(0x39, 'Clone Button')
elem(0x3a, 'Trap Button')
elem(0x3b, 'Cleats', Modifier.UNDER)
elem(0x3c, 'Magno Shoes', Modifier.UNDER)
elem(0x3d, 'Fire Shoes', Modifier.UNDER)
elem(0x3e, 'Flippers', Modifier.UNDER)
elem(0x3f, 'Red Thief')
elem(0x40, 'Red Bomb', Modifier.UNDER)
elem(0x41, '(Unused)')
elem(0x42, 'Trap')
elem(0x43, '(Unused -- Behaves like Clone Machine)')
elem(0x44, 'Clone Machine (Modifier required, see below)')
elem(0x45, 'Clue Tile')
elem(0x46, 'Force Field, Random')
elem(0x47, 'Area Control Button')
elem(0x48, 'Revolving Door, South West')
elem(0x49, 'Revolving Door, North West')
elem(0x4a, 'Revolving Door, North East')
elem(0x4b, 'Revolving Door, South East')
elem(0x4c, 'Time Bonus', Modifier.UNDER)
elem(0x4d, 'Time Toggle', Modifier.UNDER)
elem(0x4e, 'Transformer')
elem(0x4f, 'Train Tracks Base (Modifier required, see section below)')
elem(0x50, 'Metal Wall')
elem(0x51, 'Time Bomb', Modifier.UNDER)
elem(0x52, 'Helmet', Modifier.UNDER)
elem(0x53, '(Unused)', (Modifier.DIR, Modifier.UNDER))
elem(0x54, '(Unused)')
elem(0x55, '(Unused)')
elem(0x56, 'Melinda', (Modifier.DIR, Modifier.UNDER))
elem(0x57, 'Blue Teeth', (Modifier.DIR, Modifier.UNDER))
elem(0x58, '(Unused) Explosion Animation', (Modifier.DIR, Modifier.UNDER))
elem(0x59, 'Hiking Shoes', Modifier.UNDER)
elem(0x5a, 'Male Only Sign')
elem(0x5b, 'Female Only Sign')
elem(0x5c, 'Inverter Gate, North (Modifier allows other gates, see below)')
elem(0x5d, '(Unused)', (Modifier.DIR, Modifier.UNDER))
elem(0x5e, 'Logic Switch, On')
elem(0x5f, 'Flame Jet, Off')
elem(0x60, 'Flame Jet, On')
elem(0x61, 'Flame Jet Button')
elem(0x62, 'Lightning Bolt', Modifier.UNDER)
elem(0x63, 'Yellow Tank', (Modifier.DIR, Modifier.UNDER))
elem(0x64, 'Yellow Tank D-Pad')
elem(0x65, 'Mirror Chip (the enemy)', (Modifier.DIR, Modifier.UNDER))
elem(0x66, 'Mirror Melinda', (Modifier.DIR, Modifier.UNDER))
elem(0x67, '(Unused)')
elem(0x68, 'Bowling Ball', Modifier.UNDER)
elem(0x69, 'Rover', (Modifier.DIR, Modifier.UNDER))
elem(0x6a, 'Time Penalty', Modifier.UNDER)
elem(0x6b, 'Custom Floor, Brown (Modifier allows other styles, see below)')
elem(0x6c, '(Unused)')
elem(0x6d, 'Panels/Canopy, see below', Modifier.SIDES_TOP)
elem(0x6e, '(Unused)')
elem(0x6f, 'Railroad Crossing Sign', Modifier.UNDER)
elem(0x70, 'Custom Wall, Brown (Modifier allows other styles, see below)')
elem(0x71, '"Sunken" Floor (Modifier required, see below)')
elem(0x72, 'Purple Toggle Wall')
elem(0x73, 'Purple Toggle Floor')
elem(0x74, '(Unused)')
elem(0x75, '(Unused)')
elem(0x76, '8-bit Modifier (see Modifier section below)', (Modifier.BITS8, Modifier.UNDER))
elem(0x77, '16-bit Modifier (see Modifier section below)', (Modifier.BITS16, Modifier.UNDER))
elem(0x78, '32-bit Modifier (see Modifier section below)', (Modifier.BITS32, Modifier.UNDER))
elem(0x79, '(Unused)', (Modifier.DIR, Modifier.UNDER))
elem(0x7a, '10 Point Flag', Modifier.UNDER)
elem(0x7b, '100 Point Flag', Modifier.UNDER)
elem(0x7c, '1000 Point Flag', Modifier.UNDER)
elem(0x7d, 'Stay Up Green Wall')
elem(0x7e, 'Pop Down Green Wall')
elem(0x7f, '"Forbidden" mark (modifies items/keys)', Modifier.UNDER)
elem(0x80, '2x Points Flag', Modifier.UNDER)
elem(0x81, 'Directional Block', (Modifier.DIR, Modifier.DIR_ARROWS, Modifier.UNDER))
elem(0x82, 'Floor Mimic', (Modifier.DIR, Modifier.UNDER))
elem(0x83, 'Green Bomb', Modifier.UNDER)
elem(0x84, 'Green IC Chip', Modifier.UNDER)
elem(0x85, '(Unused)', Modifier.UNDER)
elem(0x86, '(Unused)', Modifier.UNDER)
elem(0x87, 'Reverse Logic Button')
elem(0x88, 'Off Switch, Off')
elem(0x89, 'On Switch, On')
elem(0x8a, 'Red Thief')
elem(0x8b, 'Ghost', (Modifier.DIR, Modifier.UNDER))
elem(0x8c, 'Steel Foil', Modifier.UNDER)
elem(0x8d, 'Turtle')
elem(0x8e, 'Eye', Modifier.UNDER)
elem(0x8f, 'Bribe', Modifier.UNDER)
elem(0x90, 'Speed Shoes', Modifier.UNDER)
elem(0x91, '(Unused)')
elem(0x92, 'Hook', Modifier.UNDER)
